{"version":3,"sources":["components/navbar.jsx","components/quote.jsx","components/watchlist.jsx","components/symbol.jsx","components/symbols.jsx","App.js","index.js"],"names":["NavBar","state","handleOnChange","event","props","onChange","className","to","this","type","placeholder","Component","sleep","milliseconds","Promise","resolve","setTimeout","Quote","AbortController","signal","isLoaded","quote","symbol","companyName","primaryExchange","latestPrice","changePercent","change","fetchQuote","a","fetch","buildQuoteUrl","then","response","json","setQuote","catch","console","log","setState","toFixed","formatChangePercent","formatChange","BASE_URL","TOKEN","WatchList","watchList","alert","setWatchList","getWatchList","symbols","JSON","parse","localStorage","getItem","length","popupDelete","warning","showCancel","confirmBtnText","confirmBtnBsStyle","title","onConfirm","deleteStock","onCancel","cancelDelete","openAnim","index","indexOf","splice","setItem","stringify","sort","map","key","id","onClick","Symbol","name","Symbols","handleSymbolClick","includes","Array","handleBack","bind","style","width","height","rowCount","rowHeight","rowRenderer","overscanRowCount","isScrolling","isVisible","history","goBack","App","symbolsFiltered","searchBox","fetchSymbols","buildSymbolsUrl","data","buildSymbolsList","buildSymbolsFilteredList","search","target","value","toLowerCase","filter","path","component","document","body","paddingTop","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3ff5f7fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass NavBar extends Component {\n  state = {};\n  render() {\n    return (\n      <nav className=\"navbar fixed-top navbar-light bg-dark\">\n        <Link className=\"w-100\" to=\"/symbols\">\n          <input\n            onChange={this.handleOnChange}\n            type=\"text\"\n            className=\"text-dark w-100 rounded border-0 m-1 p-2 h5\"\n            placeholder=\"Search for stocks\"\n          />\n        </Link>\n      </nav>\n    );\n  }\n\n  handleOnChange = event => {\n    this.props.onChange(event);\n  };\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport { BASE_URL, TOKEN } from \"../App\";\n\nconst sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\n\nconst controller = new AbortController();\nconst signal = controller.signal;\n\nclass Quote extends Component {\n  isLoaded = false;\n\n  state = {\n    quote: {\n      symbol: this.props.symbol,\n      companyName: \"\",\n      primaryExchange: \"\",\n      latestPrice: 0,\n      changePercent: 0,\n      change: 0\n    }\n  };\n  render() {\n    const quote = this.state.quote;\n    return (\n      <div>\n        <h5>{quote.companyName}</h5>\n\n        <div className=\"text-center\">\n          <span className=\"text-center h4 p-2\">\n            {quote.latestPrice.toFixed(2)}\n          </span>\n          <span className=\"text-center h5 p-2\">\n            {this.formatChangePercent()}\n          </span>\n          <span className=\"text-center h6\">{this.formatChange()}</span>\n        </div>\n\n        <strong className=\"badge badge-primary  ml-2\">{quote.symbol}</strong>\n        <span className=\"ml-2 badge text-muted\">{quote.primaryExchange}</span>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    //console.log(this.state.quote.symbol);\n    this.isLoaded = true;\n    this.fetchQuote();\n  }\n\n  componentWillUnmount() {\n    console.log(this.state.quote.symbol + \" unMount\");\n    this.isLoaded = false;\n  }\n\n  fetchQuote = async () => {\n    while (this.isLoaded) {\n      fetch(this.buildQuoteUrl())\n        .then(response => response.json())\n        .then(this.setQuote)\n        .catch();\n\n      await sleep(5000);\n    }\n  };\n\n  setQuote = quote => {\n    //if (JSON.stringify(quote) !== JSON.stringify(this.state.quote))\n    console.log(\"new quote\");\n    this.setState({ quote });\n  };\n\n  buildQuoteUrl() {\n    return BASE_URL + \"stock/\" + this.state.quote.symbol + \"/quote\" + TOKEN;\n  }\n\n  formatChangePercent() {\n    const quote = this.state.quote;\n    const changePercent =\n      quote.changePercent > 0\n        ? quote.changePercent * 100\n        : quote.changePercent * -1 * 100;\n    return quote.changePercent < 0 ? (\n      <span className=\"text-danger\">{changePercent.toFixed(2) + \"%\"}</span>\n    ) : (\n      <span className=\"text-success\">{changePercent.toFixed(2) + \"%\"}</span>\n    );\n  }\n\n  formatChange() {\n    const quote = this.state.quote;\n    return quote.change < 0 ? (\n      <span className=\"text-secondary\">\n        {\"(\" + quote.change.toFixed(2) * -1 + \"\\u25bc)\"}\n      </span>\n    ) : (\n      <span className=\"text-secondary\">\n        {\"(\" + quote.change.toFixed(2) + \"\\u25b2)\"}\n      </span>\n    );\n  }\n}\n\nexport default Quote;\n","import React, { Component } from \"react\";\nimport Quote from \"./quote\";\n\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n\nclass WatchList extends Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n  state = {\n    watchList: [],\n    alert: null\n  };\n\n  render() {\n    const watchList = this.state.watchList;\n    //console.log(\"WatchList size:\" + watchList.length);\n    return (\n      <div className=\"\">\n        <ul className=\"m-2 pt-300 list-group\">\n          {watchList.sort().map(symbol => (\n            <li\n              key={symbol}\n              id={symbol}\n              className=\"list-group-item btn-light\"\n              onClick={() => this.popupDelete(symbol)}\n            >\n              <Quote symbol={symbol} />\n            </li>\n          ))}\n        </ul>\n        {this.state.alert}\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.getWatchList();\n  }\n\n  setWatchList = watchList => {\n    this.setState({ watchList });\n  };\n\n  getWatchList = () => {\n    let symbols = JSON.parse(localStorage.getItem(\"symbols\"));\n    console.log(symbols);\n    const index = symbols ? symbols.length : 0;\n    if (index === 0) symbols = [];\n    this.setWatchList(symbols);\n  };\n\n  popupDelete = symbol => {\n    console.log(\"popup\");\n    const getAlert = () => (\n      <SweetAlert\n        warning\n        showCancel\n        confirmBtnText=\"Yes, delete it!\"\n        confirmBtnBsStyle=\"danger\"\n        //cancelBtnBsStyle=\"default\"\n        title=\"Are you sure?\"\n        onConfirm={() => this.deleteStock(symbol)}\n        onCancel={() => this.cancelDelete()}\n        openAnim={false}\n      >\n        Do you want to delete {symbol} from watchlist?\n      </SweetAlert>\n    );\n    this.setState({\n      alert: getAlert()\n    });\n  };\n\n  cancelDelete() {\n    this.setState({\n      alert: null\n    });\n  }\n\n  deleteStock = symbol => {\n    let symbols = JSON.parse(localStorage.getItem(\"symbols\"));\n    const index = symbols.indexOf(symbol);\n    symbols.splice(index, 1);\n    console.log(symbols);\n    localStorage.setItem(\"symbols\", JSON.stringify(symbols));\n\n    this.setState({\n      alert: null\n    });\n    this.getWatchList();\n  };\n\n  // fetchQuotes = async () => {\n  //   while (true) {\n  //     this.setState({ quotes: [] });\n  //     await this.getWatchList().forEach(symbol => {\n  //       fetch(this.buildQuoteUrl(symbol))\n  //         .then(response => response.json())\n  //         .then(this.buildQuotesList)\n  //         .catch();\n  //     });\n  //     await sleep(500000);\n  //   }\n  // };\n\n  // buildQuotesList = quote => {\n  //   let quotes = this.state.quotes;\n  //   quotes.push(quote);\n  //   this.setState({ quotes });\n  // };\n}\n\nexport default WatchList;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass Symbol extends Component {\n  state = {\n    symbol: this.props.symbol,\n    name: this.props.name\n  };\n  render() {\n    return (\n      <div>\n        <h5>{this.state.symbol}</h5>\n        <h6>{this.state.name}</h6>\n      </div>\n    );\n  }\n}\n\nexport default Symbol;\n","import React, { Component } from \"react\";\nimport Symbol from \"./symbol\";\nimport { List, AutoSizer } from \"react-virtualized\";\n\nclass Symbols extends Component {\n  state = {\n    symbols: this.props.symbols\n    //history: this.props.history\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleBack = this.handleBack.bind(this);\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <AutoSizer style={{ width: \"75%\", height: \"calc(100vh - 65px)\" }}>\n          {({ width, height }) => (\n            <ul className=\"list-group\">\n              <List\n                rowCount={this.state.symbols.length}\n                width={width}\n                height={height}\n                rowHeight={84}\n                rowRenderer={this.rowRenderer.bind(this)}\n                overscanRowCount={3}\n              />\n            </ul>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n\n  rowRenderer({\n    key, // Unique key within array of rows\n    index, // Index of row within collection\n    isScrolling, // The List is currently being scrolled\n    isVisible, // This row is visible within the List (eg it is not an overscanned row)\n    style // Style object to be applied to row (to position it)\n  }) {\n    const symbol = this.state.symbols[index];\n    return (\n      <div\n        onClick={() => this.handleSymbolClick(symbol.symbol)}\n        className=\"m-2 \"\n        key={key}\n        style={style}\n      >\n        <li\n          className=\"list-group-item btn-light\"\n          style={{ width: \"calc(100% - 15px)\" }}\n        >\n          <Symbol symbol={symbol.symbol} name={symbol.name} />\n        </li>\n      </div>\n    );\n  }\n\n  handleSymbolClick = symbol => {\n    //localStorage.removeItem(\"symbols\");\n    let symbols = JSON.parse(localStorage.getItem(\"symbols\"));\n    const index = symbols ? symbols.length : 0;\n    if (index > 0) {\n      if (!symbols.includes(symbol)) symbols[index] = symbol;\n    } else symbols = Array(symbol);\n\n    localStorage.setItem(\"symbols\", JSON.stringify(symbols));\n    //console.log(symbols);\n    //console.log(JSON.parse(localStorage.getItem(\"symbol\")));\n    this.handleBack();\n  };\n\n  handleBack() {\n    this.props.history.goBack();\n  }\n}\n\nexport default Symbols;\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport WatchList from \"./components/watchlist\";\nimport Symbols from \"./components/symbols\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nexport const BASE_URL = \"https://cloud.iexapis.com/stable/\";\nexport const TOKEN = \"?token=pk_5e8577fd11eb4469be629c5e2de8023f\";\n\nclass App extends Component {\n  state = {\n    symbols: [],\n    symbolsFiltered: [],\n    searchBox: \"\"\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"pt-70\">\n          <NavBar onChange={this.handleOnChange} />\n          <Switch>\n            <Route\n              path=\"/symbols\"\n              component={props => (\n                <Symbols {...props} symbols={this.state.symbolsFiltered} />\n              )}\n            />\n            <Route path=\"/\" component={WatchList} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n\n  componentDidMount() {\n    document.body.style.paddingTop = \"65px\";\n    this.fetchSymbols();\n  }\n\n  fetchSymbols = async () => {\n    const data = await fetch(this.buildSymbolsUrl());\n    const symbols = await data.json();\n    console.log(symbols.length);\n    this.buildSymbolsList(symbols);\n    this.buildSymbolsFilteredList(symbols);\n  };\n\n  buildSymbolsList = symbols => {\n    this.setState({ symbols });\n  };\n\n  buildSymbolsUrl = () => {\n    return BASE_URL + \"ref-data/symbols\" + TOKEN;\n  };\n\n  handleOnChange = event => {\n    //console.log(event.target.value);\n    const search = event.target.value.toLowerCase();\n    this.setState({ searchBox: event });\n    const symbols = this.state.symbols.filter(symbol =>\n      symbol.name.toLowerCase().includes(search)\n    );\n    this.buildSymbolsFilteredList(symbols);\n  };\n\n  buildSymbolsFilteredList = symbols => {\n    this.setState({ symbolsFiltered: symbols });\n  };\n}\n\nexport default App;\n\n// { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" },\n//       { symbol: \"AAPL\", name: \"Apple Inc.\" },\n//       { symbol: \"GOOG\", name: \"Google Ltd.\" }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n//import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}